apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-websocks-ingress
  annotations:
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
spec:
  tls:
  - secretName: ingress-websocks
    hosts:
    - realtime.staging.evntsrc.io
  rules:
  - host: realtime.staging.evntsrc.io
    http:
      paths:
      - backend:
          serviceName: websocks
          servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: websocks
spec:
  ports:
  - port: 80
    name: http
  selector:
    run: websocks
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: websocks
spec:
  replicas: 1
  template:
    metadata:
      labels:
        version: v1
        run: websocks
        app: websocks
        service: websocks
        tier: backend
      annotations:
        prometheus.io/scrape: "false"
    spec:
      containers:
      - name: websocks
        image: asia.gcr.io/evntsrc-io/websocks:latest
        ports:
        - containerPort: 80
        args:
        - websocks
        - serve
        env:
        - name: NATS_HOST
          value: "nats.nats-io:4222"
        imagePullPolicy: Always