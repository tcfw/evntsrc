// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tcfw/evntsrc/internal/storer/protos (interfaces: StorerService_QueryServer)

// Package mock_protos is a generated GoMock package.
package mock_protos

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	protos "github.com/tcfw/evntsrc/internal/event/protos"
	metadata "google.golang.org/grpc/metadata"
	reflect "reflect"
)

// MockStorerService_QueryServer is a mock of StorerService_QueryServer interface
type MockStorerService_QueryServer struct {
	ctrl     *gomock.Controller
	recorder *MockStorerService_QueryServerMockRecorder
}

// MockStorerService_QueryServerMockRecorder is the mock recorder for MockStorerService_QueryServer
type MockStorerService_QueryServerMockRecorder struct {
	mock *MockStorerService_QueryServer
}

// NewMockStorerService_QueryServer creates a new mock instance
func NewMockStorerService_QueryServer(ctrl *gomock.Controller) *MockStorerService_QueryServer {
	mock := &MockStorerService_QueryServer{ctrl: ctrl}
	mock.recorder = &MockStorerService_QueryServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorerService_QueryServer) EXPECT() *MockStorerService_QueryServerMockRecorder {
	return m.recorder
}

// Context mocks base method
func (m *MockStorerService_QueryServer) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context
func (mr *MockStorerService_QueryServerMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockStorerService_QueryServer)(nil).Context))
}

// RecvMsg mocks base method
func (m *MockStorerService_QueryServer) RecvMsg(arg0 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RecvMsg", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg
func (mr *MockStorerService_QueryServerMockRecorder) RecvMsg(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockStorerService_QueryServer)(nil).RecvMsg), arg0)
}

// Send mocks base method
func (m *MockStorerService_QueryServer) Send(arg0 *protos.Event) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send
func (mr *MockStorerService_QueryServerMockRecorder) Send(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockStorerService_QueryServer)(nil).Send), arg0)
}

// SendHeader mocks base method
func (m *MockStorerService_QueryServer) SendHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendHeader indicates an expected call of SendHeader
func (mr *MockStorerService_QueryServerMockRecorder) SendHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHeader", reflect.TypeOf((*MockStorerService_QueryServer)(nil).SendHeader), arg0)
}

// SendMsg mocks base method
func (m *MockStorerService_QueryServer) SendMsg(arg0 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendMsg", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg
func (mr *MockStorerService_QueryServerMockRecorder) SendMsg(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockStorerService_QueryServer)(nil).SendMsg), arg0)
}

// SetHeader mocks base method
func (m *MockStorerService_QueryServer) SetHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetHeader indicates an expected call of SetHeader
func (mr *MockStorerService_QueryServerMockRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHeader", reflect.TypeOf((*MockStorerService_QueryServer)(nil).SetHeader), arg0)
}

// SetTrailer mocks base method
func (m *MockStorerService_QueryServer) SetTrailer(arg0 metadata.MD) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTrailer", arg0)
}

// SetTrailer indicates an expected call of SetTrailer
func (mr *MockStorerService_QueryServerMockRecorder) SetTrailer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTrailer", reflect.TypeOf((*MockStorerService_QueryServer)(nil).SetTrailer), arg0)
}
