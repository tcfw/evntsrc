syntax = "proto3";

package evntsrc.streams;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/api/annotations.proto";

// Enable custom Marshal method.
option (gogoproto.marshaler_all) = true;
// Enable custom Unmarshal method.
option (gogoproto.unmarshaler_all) = true;
// Enable custom Size method (Required by Marshal and Unmarshal).
option (gogoproto.sizer_all) = true;
// Enable registration with golang/protobuf for the grpc-gateway.
option (gogoproto.goproto_registration) = true;
// Enable generation of XXX_MessageName methods for grpc-go/status.
option (gogoproto.messagename_all) = true;

message Stream {
	int32 ID = 1 [(gogoproto.moretags) = "bson:\"_id\""];
	string Cluster = 2;
	string Name = 3;
	string Owner = 4;
	string Icon = 5;
	string Color = 6;
	string saveId = 7;
}

message SearchRequest {
	string Query = 1;
}

message StreamList {
	repeated Stream Streams = 1;
}

message Empty {}

message GetRequest {
	int32 ID = 1;
}

message IdList {
	repeated int32 ID = 1;
}

service StreamsService {
	rpc Create(Stream) returns (Stream) {
		option (google.api.http) = {
            post: "/v1/stream",
            body: "*"
        };
	};
	
	rpc List(Empty) returns (StreamList) {
		option (google.api.http) = {
			get: "/v1/streams",
		};
	}

	
	rpc Get(GetRequest) returns (Stream) {
		option (google.api.http) = {
			get: "/v1/stream/{ID}",
		};
	}
	
	rpc Update(Stream) returns (Stream) {
		option (google.api.http) = {
			post: "/v1/stream/{ID}"
			body: "*"
		};
	};
	
	rpc Delete(Stream) returns (Empty) {
		option (google.api.http) = {
			delete: "/v1/stream/{ID}"
		};
	}

	//Admin
	rpc ListIds(SearchRequest) returns (IdList);
}